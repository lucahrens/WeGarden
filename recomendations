import json

def lambda_handler(event, context):
	growTime = event["growTime"]
	soilTemp = event["soilTemp"]
	sunlightRate = event["sunlightRate"]
	
    # listOfPlants = [plant, minDays, maxDays, minTemp, maxTemp, minSun, maxSun]
	listOfPlants = [["Asparagus", 700, 1300, 75, 85, 0, 5],
					["Lima beans", 60, 80, 75, 85, 6, 10],
					["Snap beans", 50, 70, 75, 85, 6, 10],
					["Beets", 50, 70, 65, 85, 0, 5],
					["Cabbage", 80, 180, 60, 85, 0, 5],
					["Carrots", 70, 80, 65, 85, 0, 5],
					["Cauliflower", 55, 130, 65, 85, 0, 5],
					["Celery", 120, 140, 60, 70, 0, 5],
					["Sweet corn", 60, 100, 65, 95, 6, 10],
					["Cucumbers", 50, 70, 65, 95, 6, 10],
					["Eggplant", 100, 120, 75, 85, 6, 10],
					["Lettuce", 40, 60, 60, 75, 0, 5],
					["Melon", 65, 100, 75, 85, 6, 10],
					["Okra", 60, 90, 85, 95, 6, 10],
					["Onions", 30, 100, 65, 85, 6, 10],
					["Parsley", 20, 30, 65, 85, 6, 10],
					["Parsnips", 120, 180, 65, 75, 0, 5],
					["Peas", 115, 166, 65, 75, 0, 5],
					["Peppers", 60, 90, 65, 75, 6, 10],
					["Radishes", 22, 70, 65, 85, 0, 5],
					["Spinach", 40, 55, 65, 75, 0, 5],
					["Tomatoes", 40, 50, 65, 85, 6, 10],
					["Turnips", 30, 60, 60, 95, 0, 5],
					["Watermelons", 80, 100, 75, 95, 6, 10]]
					
	#Days to Grow
	daysList = []
	for i in listOfPlants:
		daysMin = i[1]
		daysMax = i[2]
		if ((growTime >= daysMin) and (growTime <= daysMax)):
			daysList.append(i[0])

	#Soil Temperature
	soilList = []
	for i in listOfPlants:
		soilMin = i[3]
		soilMax = i[4]
		if ((soilTemp >= soilMin) and (soilTemp <= soilMax)):
			soilList.append(i[0])

	#Sunlight Rate
	sunList = []
	for i in listOfPlants:
			sunMin = i[5]
			sunMax = i[6]
			if ((sunlightRate >= sunMin) and (sunlightRate <= sunMax)):
				sunList.append(i[0])

	#Overlap of Lists
	totalList = set(daysList) & set(soilList) & set(sunList)

	#If there is no overlap, look at overlap between 2 lists
	message = ""
	if(totalList == set()):
		totalList = set(soilList) & set(sunList)
		message = "Sorry, germination period could not be taken into account for your recommendation."
		if(totalList == set()):
			totalList = set(soilList) & set(daysList)
			message = "Sorry, sunlight rating could not be taken into account for your recommendation."
			if(totalList == set()):
				totalList = set(sunList) & set(daysList)
				message = "Sorry, soil temperature could not be taken into account for your recommendation."
				if(totalList == set()):
					message = "Sorry, there are no plants that fit your criteria."
					
	returnList = {"plants": list(totalList), "message": message}
	return {
        'statusCode': 200,
        "plants": returnList
    }
